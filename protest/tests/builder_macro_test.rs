//! Tests for the test_builder macro

use protest::test_builder;

// Simple test using the builder macro
test_builder! {
    test_name: test_simple_addition,
    generator: protest::range(1, 100),
    property: |x: i32| {
        x > 0 && x <= 100
    }
}

// Test with custom configuration
test_builder! {
    test_name: test_with_config,
    iterations: 50,
    seed: 42,
    generator: protest::range(1, 10),
    property: |x: i32| {
        (1..=10).contains(&x)
    }
}

// Test with all configuration options
test_builder! {
    test_name: test_full_config,
    iterations: 20,
    seed: 123,
    max_shrink_iterations: 100,
    shrink_timeout_secs: 5,
    generator: protest::just(42),
    property: |x: i32| {
        x == 42
    }
}

#[cfg(test)]
mod builder_macro_tests {
    #[test]
    fn test_builder_macro_compiles() {
        // This test verifies that the builder macro generates valid code
        // The actual property tests are generated by the macro above
    }
}
